{"version":3,"file":"static/js/849.717d67dd.chunk.js","mappings":"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","sources":["components/MovieGallery/MovieGallery.styled.jsx","components/MovieGallery/MovieGallery.jsx","components/GalleryPagination/GalleryPagination.styled.jsx","components/GalleryPagination/GalleryPagination.jsx","pages/Home/Home.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const NavLinkItem = styled(NavLink)`\n  display: flex;\n  flex-direction: column;\n`;\nexport const ContainerWrapper = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n`;\nexport const Container = styled.ul`\n  list-style: none;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 200px);\n  gap: 16px;\n  padding: 0;\n`;\n\nexport const CardWrapper = styled.li`\n  cursor: pointer;\n  transition: box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    box-shadow: 7px -7px 21px rgba(54, 80, 197, 0.6);\n  }\n\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.03);\n  }\n  border: 1px solid black;\n  border-radius: 4px;\n\n  > a {\n    text-decoration: none;\n  }\n`;\nexport const MovieName = styled.h3`\n  padding: 4px;\n  margin-top: 8px;\n  margin-bottom: 0;\n  color: black;\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  NavLinkItem,\n  CardWrapper,\n  Container,\n  MovieName,\n  ContainerWrapper,\n} from './MovieGallery.styled';\n\nconst MovieGallery = ({ movieList, pathLocation }) => {\n  const location = useLocation();\n  return (\n    <ContainerWrapper>\n      <Container>\n        {movieList.map(({ id: movieId, original_title, poster_path: path }) => {\n          const poster_path = path ? path : 'uc4RAVW1T3T29h6OQdr7zu4Blui.jpg';\n          return (\n            <CardWrapper key={movieId}>\n              <NavLinkItem\n                to={`${pathLocation}${movieId}`}\n                state={{ from: location }}\n              >\n                <img\n                  src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n                  alt=\"{original_title}\"\n                />\n                <MovieName>{original_title}</MovieName>\n              </NavLinkItem>\n            </CardWrapper>\n          );\n        })}\n      </Container>\n    </ContainerWrapper>\n  );\n};\nexport default MovieGallery;\n\nMovieGallery.propTypes = {\n  pathLocation: PropTypes.string.isRequired,\n  movieList: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n};\n","import styled from '@emotion/styled';\nexport const PagginationWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 15px;\n`;\n","import Pagination from '@mui/material/Pagination';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { PagginationWrapper } from './GalleryPagination.styled';\n\nconst GalleryPagination = ({ onPagination, countPages, currentPage }) => {\n  return (\n    <PagginationWrapper>\n      <Pagination\n        // boundaryCount={5}\n        count={countPages}\n        page={currentPage}\n        showFirstButton\n        showLastButton\n        variant=\"outlined\"\n        shape=\"rounded\"\n        size=\"large\"\n        onChange={(e, page) => onPagination(page)}\n      />\n    </PagginationWrapper>\n  );\n};\n\nexport default GalleryPagination;\nGalleryPagination.propTypes = {\n  onPagination: PropTypes.func.isRequired,\n  countPages: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n};\n","import GalleryPagination from 'components/GalleryPagination';\nimport Loader from 'components/Loader';\nimport MovieGallery from 'components/MovieGallery';\nimport { useState, useEffect } from 'react';\nimport { fetchDayMovies } from 'services/api';\n\nconst Home = () => {\n  const PATH = 'movies/';\n  const [dayMovies, setDayMovies] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalPages, seTotalPages] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    // console.log('mount home');\n    // const fetchMovie = () => {\n    //   fetchDayMovies()\n    //     .then(data => {\n    //       setDayMovies(data.results);\n    //       console.log(data.results);\n    //     })\n    //     .catch(error => console.log(error));\n    // };\n\n    const fetchMovie = async () => {\n      setIsLoading(true);\n      try {\n        const response = await fetchDayMovies();\n        if (response) {\n          const { results, total_pages } = response;\n          // console.log('results', results);\n          setDayMovies(results);\n          seTotalPages(total_pages);\n          // console.log('setDayMovies:', results);\n        }\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovie();\n  }, []);\n\n  useEffect(() => {\n    // console.log('mount home');\n    // const fetchMovie = () => {\n    //   fetchDayMovies()\n    //     .then(data => {\n    //       setDayMovies(data.results);\n    //       console.log(data.results);\n    //     })\n    //     .catch(error => console.log(error));\n    // };\n\n    const fetchMovie = async () => {\n      setIsLoading(true);\n      try {\n        const response = await fetchDayMovies(page);\n        if (response) {\n          const { results, total_pages } = response;\n          // console.log('results', results);\n          setDayMovies(results);\n          seTotalPages(total_pages);\n          // console.log('setDayMovies:', results);\n        }\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMovie();\n  }, [page]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      <MovieGallery movieList={dayMovies} pathLocation={PATH} />\n      {totalPages > 1 && (\n        <GalleryPagination\n          onPagination={setPage}\n          countPages={totalPages}\n          currentPage={page}\n        />\n      )}\n    </>\n  );\n};\nexport default Home;\n","import axios from 'axios';\n\n// const params = {\n//   api_key: 'ec8ea0b4348914be2279bac7c8ca37c4',\n// };\n// let currentPage = 1;\n\nexport const fetchDayMovies = async (page = 1) => {\n  const url = `https://api.themoviedb.org/3/trending/movie/day?`;\n  const params = {\n    api_key: 'ec8ea0b4348914be2279bac7c8ca37c4',\n    page,\n  };\n  const response = await axios.get(url, { params });\n  // console.log('response.data.hits', response.data);\n  return response.data;\n};\nexport const fetchMovies = async (search, page) => {\n  console.log('search ', search);\n  const url = 'https://api.themoviedb.org/3/search/movie';\n  const params = {\n    api_key: 'ec8ea0b4348914be2279bac7c8ca37c4',\n    query: search,\n    page,\n  };\n  const response = await axios.get(url, { params });\n  // console.log('response.data.hits', response.data);\n  return response.data;\n};\nexport const fetchMoviesById = async id => {\n  // console.log('id ', id);\n  const url = `https://api.themoviedb.org/3/movie/${id}`;\n  const params = {\n    api_key: 'ec8ea0b4348914be2279bac7c8ca37c4',\n  };\n  const response = await axios.get(url, { params });\n  // console.log('response.data.hits', response.data);\n  return response.data;\n};\n\nexport const fetchDataById = async (url, params) => {\n  // console.log('id ', id);\n  // const url = `https://api.themoviedb.org/3/movie/${id}`;\n  // const params = {\n  //   api_key: 'ec8ea0b4348914be2279bac7c8ca37c4',\n  // };\n  const response = await axios.get(url, { params });\n  // console.log('response.data.hits', response.data);\n  return response.data;\n};\n"],"names":["NavLinkItem","styled","NavLink","ContainerWrapper","Container","CardWrapper","MovieName","movieList","pathLocation","location","useLocation","map","movieId","id","original_title","path","poster_path","to","state","from","src","alt","PagginationWrapper","onPagination","countPages","currentPage","Pagination","count","page","showFirstButton","showLastButton","variant","shape","size","onChange","e","useState","dayMovies","setDayMovies","setPage","totalPages","seTotalPages","isLoading","setIsLoading","useEffect","fetchMovie","fetchDayMovies","response","results","total_pages","console","log","Loader","MovieGallery","url","params","api_key","axios","data","fetchMovies","search","query","fetchMoviesById","fetchDataById"],"sourceRoot":""}
{"version":3,"file":"static/js/714.4867f9ec.chunk.js","mappings":"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","sources":["components/MovieGallery/MovieGallery.styled.jsx","components/MovieGallery/MovieGallery.jsx","pages/Movies/Movies.styled.jsx","components/Button/Button.styled.jsx","components/Button/Button.jsx","components/MovieForm/MovieForm.styled.jsx","components/MovieForm/MovieForm.jsx","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const NavLinkItem = styled(NavLink)`\n  display: flex;\n  flex-direction: column;\n`;\nexport const ContainerWrapper = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n`;\nexport const Container = styled.ul`\n  list-style: none;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 200px);\n  gap: 16px;\n  padding: 0;\n`;\n\nexport const CardWrapper = styled.li`\n  cursor: pointer;\n  transition: box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    box-shadow: 7px -7px 21px rgba(54, 80, 197, 0.6);\n  }\n\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.03);\n  }\n  border: 1px solid black;\n  border-radius: 4px;\n\n  > a {\n    text-decoration: none;\n  }\n`;\nexport const MovieName = styled.h3`\n  padding: 4px;\n  margin-top: 8px;\n  margin-bottom: 0;\n  color: black;\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  NavLinkItem,\n  CardWrapper,\n  Container,\n  MovieName,\n  ContainerWrapper,\n} from './MovieGallery.styled';\n\nconst MovieGallery = ({ movieList, pathLocation }) => {\n  const location = useLocation();\n  // console.log('location', location);\n  return (\n    <ContainerWrapper>\n      <Container>\n        {movieList.map(({ id: movieId, original_title, poster_path: path }) => {\n          const poster_path = path ? path : 'uc4RAVW1T3T29h6OQdr7zu4Blui.jpg';\n          return (\n            <CardWrapper key={movieId}>\n              <NavLinkItem\n                to={`${pathLocation}${movieId}`}\n                state={{ from: location }}\n              >\n                <img\n                  src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n                  alt=\"{original_title}\"\n                />\n                <MovieName>{original_title}</MovieName>\n              </NavLinkItem>\n            </CardWrapper>\n          );\n        })}\n      </Container>\n    </ContainerWrapper>\n  );\n};\nexport default MovieGallery;\n\nMovieGallery.propTypes = {\n  pathLocation: PropTypes.string.isRequired,\n  movieList: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n};\n","import styled from '@emotion/styled';\n\nimport { NavLink } from 'react-router-dom';\n\nexport const NavLinkItem = styled(NavLink)`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const MovieContainer = styled.div`\n  /* justify-items: center; */\n  text-align: center;\n  /* display: flex;\n  flex-direction: column;\n  justify-content: center; */\n  /* padding-bottom: 10 px; */\n`;\n","import styled from '@emotion/styled';\n\nexport const LoadMoreBtn = styled.button`\n  margin-right: auto;\n  margin-left: auto;\n  padding: 8px 16px;\n  border-radius: 2px;\n  background-color: #3f51b5;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: inline-block;\n  color: #fff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 180px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  &:disabled {\n    background-color: rgb(174, 176, 188);\n  }\n  &:not(:disabled):hover,\n  :focus {\n    background-color: #303f9f;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { LoadMoreBtn } from './Button.styled';\n\nconst Button = ({ onLoadMore, onDisableLoadMore }) => {\n  return (\n    <LoadMoreBtn\n      onClick={onLoadMore}\n      type=\"button\"\n      disabled={onDisableLoadMore()}\n    >\n      Load more\n    </LoadMoreBtn>\n  );\n};\nexport default Button;\n\nButton.propTypes = {\n  onLoadMore: PropTypes.func.isRequired,\n  onDisableLoadMore: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\nimport { Form, Field } from 'formik';\nimport { GoSearch } from 'react-icons/go';\nexport const SearchBarWrapper = styled.header`\n  top: 0;\n  left: 0;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #3f51b5;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const SearchForm = styled(Form)`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const FormInput = styled(Field)`\n  /* margin-top: 5px; */\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const FormBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 48px;\n  height: 48px;\n  border: 0;\n\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 1;\n  }\n  &:disabled {\n    background-color: #858dbb;\n  }\n`;\nexport const FormErrorMessage = styled.span`\n  color: red;\n  /* background-color: rgb(63, 81, 181); */\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n`;\nexport const SearchFormButtonLabel = styled.label`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\nexport const SvgBtn = styled(GoSearch)`\n  width: 30px;\n  height: auto;\n\n  color: rgb(63, 81, 181);\n`;\n","import { Formik, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\n// import { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  SearchForm,\n  FormInput,\n  FormErrorMessage,\n  SearchBarWrapper,\n  FormBtn,\n  SvgBtn,\n} from './MovieForm.styled';\n\nconst MovieForm = ({ setSearchParams, setQuery, query }) => {\n  const initialValues = {\n    search: query !== {} ? query : '',\n  };\n  // const [initialValues, setInitialValues] = useState();\n  const onSubmitForm = (values, { resetForm }) => {\n    console.log('values', values);\n    //   console.log('actions', actions);\n    const { search } = values;\n    setSearchParams({ query: search });\n    setQuery(search);\n    // resetForm();\n  };\n  // useEffect(() => {\n  //   setInitialValues({\n  //     search: query ? query : '',\n  //   });\n  // }, [query]);\n\n  const schema = yup.object().shape({\n    search: yup\n      .string()\n      .max(20)\n      .matches(\n        /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n        'Search may contain only letters, apostrophe, dash and spaces. '\n      )\n      .required(),\n  });\n\n  return (\n    <SearchBarWrapper className=\"searchbar\">\n      <Formik\n        initialValues={initialValues}\n        validationSchema={schema}\n        onSubmit={onSubmitForm}\n        // onChange={onChangeForm}\n      >\n        <SearchForm className=\"form\">\n          <FormBtn\n            type=\"submit\"\n            // disabled={isSubmitting}\n            className=\"button\"\n            aria-label=\"Search\"\n          >\n            <SvgBtn />\n          </FormBtn>\n          <FormInput\n            className=\"input\"\n            name=\"search\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies\"\n          />\n          <ErrorMessage name=\"search\" component={FormErrorMessage} />\n        </SearchForm>\n      </Formik>\n    </SearchBarWrapper>\n  );\n};\nexport default MovieForm;\n\nMovieForm.propTypes = {\n  setSearchParams: PropTypes.func.isRequired,\n  setQuery: PropTypes.func.isRequired,\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { useState, useEffect, useMemo } from 'react';\nimport { MovieContainer } from './Movies.styled';\nimport { fetchMovies } from 'services/api';\nimport Loader from 'components/Loader';\nimport Button from 'components/Button';\nimport MovieForm from 'components/MovieForm';\nimport MovieGallery from 'components/MovieGallery';\n\nconst Movies = () => {\n  const PATH = '';\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const params = useMemo(\n    () => Object.fromEntries([...searchParams]),\n    [searchParams]\n  );\n  const { query: paramQuery } = params;\n  const [query, setQuery] = useState(paramQuery ? paramQuery : '');\n  const [movieList, setMovieList] = useState([]);\n  // const location = useLocation();\n  const [pageOnMovie, setPageOnMovie] = useState(1);\n  const [totalPagesOnMovie, seTotalPages] = useState(0);\n  const [isLoadingOnMovie, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (query === '') return;\n\n    async function fetchMoviesList() {\n      setIsLoading(true);\n      try {\n        const response = await fetchMovies(query, pageOnMovie);\n        if (response) {\n          const { results, total_pages } = response;\n          if (pageOnMovie === 1) {\n            setMovieList([...results]);\n            seTotalPages(total_pages);\n          } else {\n            setMovieList(prevState => [...prevState, ...results]);\n            seTotalPages(total_pages);\n            // console.log('setMovieList', results);\n          }\n        }\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    fetchMoviesList();\n  }, [query, pageOnMovie]);\n\n  function OnClickLoadMore() {\n    setPageOnMovie(prev => prev + 1);\n  }\n  function onDisableLoadMore() {\n    if (totalPagesOnMovie - pageOnMovie === 0) return true;\n    else return false;\n  }\n\n  return (\n    <MovieContainer>\n      <MovieForm\n        setQuery={setQuery}\n        setSearchParams={setSearchParams}\n        query={query}\n      />\n      {isLoadingOnMovie && <Loader />}\n      {movieList.length > 0 && (\n        <MovieGallery movieList={movieList} pathLocation={PATH} />\n      )}\n      {totalPagesOnMovie > 1 && (\n        <Button\n          onLoadMore={OnClickLoadMore}\n          onDisableLoadMore={onDisableLoadMore}\n        />\n      )}\n    </MovieContainer>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\n// const params = {\n//   api_key: 'ec8ea0b4348914be2279bac7c8ca37c4',\n// };\n// let currentPage = 1;\n\nexport const fetchDayMovies = async (page = 1) => {\n  const url = `https://api.themoviedb.org/3/trending/movie/day?`;\n  const params = {\n    api_key: 'ec8ea0b4348914be2279bac7c8ca37c4',\n    page,\n  };\n  const response = await axios.get(url, { params });\n  // console.log('response.data.hits', response.data);\n  return response.data;\n};\nexport const fetchMovies = async (search, page) => {\n  console.log('search ', search);\n  const url = 'https://api.themoviedb.org/3/search/movie';\n  const params = {\n    api_key: 'ec8ea0b4348914be2279bac7c8ca37c4',\n    query: search,\n    page,\n  };\n  const response = await axios.get(url, { params });\n  // console.log('response.data.hits', response.data);\n  return response.data;\n};\nexport const fetchMoviesById = async id => {\n  // console.log('id ', id);\n  const url = `https://api.themoviedb.org/3/movie/${id}`;\n  const params = {\n    api_key: 'ec8ea0b4348914be2279bac7c8ca37c4',\n  };\n  const response = await axios.get(url, { params });\n  // console.log('response.data.hits', response.data);\n  return response.data;\n};\n\nexport const fetchDataById = async (url, params) => {\n  // console.log('id ', id);\n  // const url = `https://api.themoviedb.org/3/movie/${id}`;\n  // const params = {\n  //   api_key: 'ec8ea0b4348914be2279bac7c8ca37c4',\n  // };\n  const response = await axios.get(url, { params });\n  // console.log('response.data.hits', response.data);\n  return response.data;\n};\n"],"names":["NavLinkItem","styled","NavLink","ContainerWrapper","Container","CardWrapper","MovieName","movieList","pathLocation","location","useLocation","map","movieId","id","original_title","path","poster_path","to","state","from","src","alt","MovieContainer","LoadMoreBtn","onLoadMore","onDisableLoadMore","onClick","type","disabled","SearchBarWrapper","SearchForm","Form","FormInput","Field","FormBtn","FormErrorMessage","SvgBtn","GoSearch","setSearchParams","setQuery","query","initialValues","search","schema","yup","shape","max","matches","required","className","validationSchema","onSubmit","values","resetForm","console","log","name","autoComplete","autoFocus","placeholder","component","useSearchParams","searchParams","paramQuery","useMemo","Object","fromEntries","useState","setMovieList","pageOnMovie","setPageOnMovie","totalPagesOnMovie","seTotalPages","isLoadingOnMovie","setIsLoading","useEffect","fetchMovies","response","results","total_pages","prevState","fetchMoviesList","Loader","length","MovieGallery","prev","fetchDayMovies","page","url","params","api_key","axios","data","fetchMoviesById","fetchDataById"],"sourceRoot":""}